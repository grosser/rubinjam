#!/usr/bin/env ruby
# generated by rubinjam v0.1.0 -- https://github.com/grosser/rubinjam
module Rubinjam
  LIBRARIES = {
    "hello/world" => "module Hello\n  WORLD = \"hello world\"\nend\n"
  }

  ROOT = File.expand_path("../", __FILE__) << "/lib/"

  module AutoloadFix
    def self.included(base)
      base.class_eval do
        alias autoload_without_rubinjam autoload
        def autoload(const, file)
          if Rubinjam::LIBRARIES[file]
            require file
          else
            autoload_without_rubinjam(const, file)
          end
        end
      end
    end
  end
end

Module.include Rubinjam::AutoloadFix
include Rubinjam::AutoloadFix

def require(file)
  normalized_file = file.sub(Rubinjam::ROOT, "")
  if code = Rubinjam::LIBRARIES[normalized_file]
    return if code == :loaded
    eval(code, TOPLEVEL_BINDING, "rubinjam/#{normalized_file}.rb")
    Rubinjam::LIBRARIES[normalized_file] = :loaded
  else
    super
  end
end
#!/usr/bin/env ruby
require 'optparse'
require 'hello/world'
puts Hello::WORLD
